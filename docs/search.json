[{"path":"https://vagishhemmige.github.io/sRtr/articles/building-cohort-with-strobe.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Building Cohorts with STROBE Diagrams","text":"STROBE (Strengthening Reporting Observational Studies Epidemiology) statement provides guidelines reporting observational studies. key component flow diagram shows study population selected. encourage use companion strobe package, provides tools create STROBE-compliant flow diagrams building cohort. vignette demonstrates use strobe functions via standalone strobe package : Initialize cohort inclusion criteria Apply sequential filters exclusion tracking Generate customize STROBE flow diagrams Review complete filtering log details, visit strobe package website.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/building-cohort-with-strobe.html","id":"installation","dir":"Articles","previous_headings":"Introduction","what":"Installation","title":"Building Cohorts with STROBE Diagrams","text":"can install development version sRtr package GitHub using devtools pak:","code":"# Install devtools if needed install.packages(\"devtools\")  # Install sRtr (and strobe, a suggested package) devtools::install_github(\"VagishHemmige/sRtr\", dependencies = TRUE)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/building-cohort-with-strobe.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting Started","title":"Building Cohorts with STROBE Diagrams","text":"","code":"library(sRtr) library(dplyr) library(strobe)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/building-cohort-with-strobe.html","id":"basic-strobe-workflow","dir":"Articles","previous_headings":"","what":"Basic STROBE Workflow","title":"Building Cohorts with STROBE Diagrams","text":"STROBE workflow strobe follows steps: Initialize cohort strobe_initialize() Filter sequentially strobe_filter() Plot diagram plot_strobe_diagram() Review log get_strobe_log()","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/building-cohort-with-strobe.html","id":"example-kidney-transplant-cohort","dir":"Articles","previous_headings":"Basic STROBE Workflow","what":"Example: Kidney Transplant Cohort","title":"Building Cohorts with STROBE Diagrams","text":"Let’s build cohort kidney transplant recipients specific criteria:","code":"TX_KI %>%   strobe::strobe_initialize(inclusion_label = \"All kidney transplants\") %>%   strobe::strobe_filter(     condition = \"DON_AGE > 18\",     inclusion_label = \"Donor over 18 years old\",     exclusion_reason = \"Excluded: Donor age ≤ 18\"   ) %>%   strobe::strobe_filter(     condition = \"DON_ABO == 'B'\",     inclusion_label = \"Donor blood type B\",     exclusion_reason = \"Excluded: Donor blood type is not B\"   ) %>%   strobe::strobe_filter(     condition = \"REC_AGE >= 18 & REC_AGE <= 65\",     inclusion_label = \"Recipient age 18-65\",     exclusion_reason = \"Excluded: Recipient age outside 18-65 range\"   )"},{"path":"https://vagishhemmige.github.io/sRtr/articles/building-cohort-with-strobe.html","id":"reviewing-the-filtering-log","dir":"Articles","previous_headings":"Basic STROBE Workflow","what":"Reviewing the Filtering Log","title":"Building Cohorts with STROBE Diagrams","text":"log shows: - filtering step - Number records included/excluded step - Cumulative counts - Exclusion reasons","code":"# View the complete filtering log strobe::get_strobe_log()"},{"path":"https://vagishhemmige.github.io/sRtr/articles/building-cohort-with-strobe.html","id":"creating-strobe-diagrams","dir":"Articles","previous_headings":"","what":"Creating STROBE Diagrams","title":"Building Cohorts with STROBE Diagrams","text":"details, see separate documentation strobe package.","code":"strobe::plot_strobe_diagram(   incl_width_min = 3,   incl_height = 1,   excl_width_min = 2.5,   excl_height = 1,   lock_width_min = TRUE,   lock_height = TRUE,   incl_fontsize = 16,   excl_fontsize = 14  )"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Getting Started with sRtr","text":"sRtr package provides comprehensive tools working Scientific Registry Transplant Recipients (SRTR) Standard Analysis Files (SAFs) R. vignette guide essential steps setting environment loading SRTR data files proper labeling.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"what-is-srtr","dir":"Articles","previous_headings":"Introduction","what":"What is SRTR?","title":"Getting Started with sRtr","text":"Scientific Registry Transplant Recipients (SRTR) comprehensive database tracks transplant data United States. SRTR Standard Analysis Files (SAFs) contain de-identified patient-level data researchers can use study transplant outcomes, waiting list dynamics, donor characteristics.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"package-overview","dir":"Articles","previous_headings":"Introduction","what":"Package Overview","title":"Getting Started with sRtr","text":"sRtr package streamlines process : Setting SRTR data directory Loading SRTR files automatic format detection Applying official SRTR variable labels factor conversions Preparing data analysis proper documentation","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting Started with sRtr","text":"can install development version sRtr GitHub: Load package:","code":"# install.packages(\"devtools\") devtools::install_github(\"VagishHemmige/sRtr\") library(sRtr) library(dplyr) library(labelled)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"setting-up-your-srtr-data-directory","dir":"Articles","previous_headings":"","what":"Setting Up Your SRTR Data Directory","title":"Getting Started with sRtr","text":"can load SRTR files, need tell package SRTR data files located. set_srtr_wd() function allows specify directory containing SRTR files.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"temporary-setup-session-only","dir":"Articles","previous_headings":"Setting Up Your SRTR Data Directory","what":"Temporary Setup (Session Only)","title":"Getting Started with sRtr","text":"single R session, can set working directory temporarily:","code":"# Point to your SRTR data directory for this session only set_srtr_wd(\"path/to/your/srtr/files\")"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"permanent-setup","dir":"Articles","previous_headings":"Setting Up Your SRTR Data Directory","what":"Permanent Setup","title":"Getting Started with sRtr","text":"frequently work SRTR data, can set directory permanently adding permanent = TRUE argument: save preference automatically load future R sessions.","code":"# Set the directory permanently across R sessions set_srtr_wd(\"path/to/your/srtr/files\", permanent = TRUE)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"verifying-your-setup","dir":"Articles","previous_headings":"Setting Up Your SRTR Data Directory","what":"Verifying Your Setup","title":"Getting Started with sRtr","text":"setting working directory, package automatically detect available SRTR files directory. can verify setup working correctly checking files recognized.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"loading-srtr-files","dir":"Articles","previous_headings":"","what":"Loading SRTR Files","title":"Getting Started with sRtr","text":"primary function loading SRTR data load_srtr_file(). function can load SAS (.sas7bdat) Parquet (.parquet) files automatically applies appropriate SRTR data dictionary.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"basic-file-loading","dir":"Articles","previous_headings":"Loading SRTR Files","what":"Basic File Loading","title":"Getting Started with sRtr","text":"","code":"# Load a transplant file (liver transplants) tx_li <- load_srtr_file(\"TX_LI\")  # Load a waiting list file (kidney candidates) cand_kida <- load_srtr_file(\"CAND_KIDA\")  # Load a donor file donor <- load_srtr_file(\"DONOR\")"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"loading-with-labels","dir":"Articles","previous_headings":"Loading SRTR Files","what":"Loading with Labels","title":"Getting Started with sRtr","text":"One key features sRtr ability automatically apply variable labels factor conversions using official SRTR data dictionary.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"variable-labels","dir":"Articles","previous_headings":"Loading SRTR Files > Loading with Labels","what":"Variable Labels","title":"Getting Started with sRtr","text":"Variable labels provide descriptive names column:","code":"# Load with variable labels tx_li <- load_srtr_file(\"TX_LI\", var_labels = TRUE)  # View variable labels var_label(tx_li$DON_RACE) var_label(tx_li$REC_AGE_AT_TX) var_label(tx_li$GRAFT_STAT)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"factor-labels","dir":"Articles","previous_headings":"Loading SRTR Files > Loading with Labels","what":"Factor Labels","title":"Getting Started with sRtr","text":"Factor labels convert coded values meaningful categories:","code":"# Load with factor labels tx_li <- load_srtr_file(\"TX_LI\", factor_labels = TRUE)  # View factor levels str(tx_li$DON_RACE) levels(tx_li$DON_RACE)  # View factor labels for transplant status str(tx_li$GRAFT_STAT)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"complete-labeling","dir":"Articles","previous_headings":"Loading SRTR Files > Loading with Labels","what":"Complete Labeling","title":"Getting Started with sRtr","text":"informative data, load variable factor labels:","code":"# Load with both variable and factor labels tx_li <- load_srtr_file(\"TX_LI\", var_labels = TRUE, factor_labels = TRUE)  # Now you have both descriptive variable names and meaningful factor levels str(tx_li$DON_RACE) var_label(tx_li$DON_RACE)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"working-with-labeled-data","dir":"Articles","previous_headings":"","what":"Working with Labeled Data","title":"Getting Started with sRtr","text":"’ve loaded SRTR data labels, can work like R data frame, added benefit meaningful variable factor labels.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"exploring-your-data","dir":"Articles","previous_headings":"Working with Labeled Data","what":"Exploring Your Data","title":"Getting Started with sRtr","text":"","code":"# Basic data exploration dim(tx_li) names(tx_li)  # View the first few rows head(tx_li)  # Summary statistics with meaningful labels summary(tx_li$DON_RACE) summary(tx_li$REC_AGE_AT_TX)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"preserving-labels-during-analysis","dir":"Articles","previous_headings":"Working with Labeled Data","what":"Preserving Labels During Analysis","title":"Getting Started with sRtr","text":"labelled package helps preserve variable labels data manipulation:","code":"# Filter data while preserving labels recent_tx <- tx_li %>%   filter(TX_DATE >= as.Date(\"2020-01-01\")) %>%   select(TX_DATE, DON_RACE, REC_AGE_AT_TX, GRAFT_STAT)  # Labels are preserved var_label(recent_tx$DON_RACE)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"independent-labeling-functions","dir":"Articles","previous_headings":"","what":"Independent Labeling Functions","title":"Getting Started with sRtr","text":"already loaded SRTR data (e.g., another source), can apply labels independently using dedicated labeling functions.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"applying-factor-labels","dir":"Articles","previous_headings":"Independent Labeling Functions","what":"Applying Factor Labels","title":"Getting Started with sRtr","text":"","code":"# Load raw data df <- read_sas(\"TX_KI.sas7bdat\")  # Apply factor labels df <- apply_srtr_factors(df, filekey = \"TX_KI\")  # View the result str(df$DON_RACE)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"applying-variable-labels","dir":"Articles","previous_headings":"Independent Labeling Functions","what":"Applying Variable Labels","title":"Getting Started with sRtr","text":"","code":"# Apply variable labels df <- apply_srtr_varlabels(df, filekey = \"TX_KI\")  # View variable labels var_label(df$DON_RACE) var_label(df$REC_AGE_AT_TX)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"automatic-file-detection","dir":"Articles","previous_headings":"Independent Labeling Functions","what":"Automatic File Detection","title":"Getting Started with sRtr","text":"data frame name matches SRTR file name, can omit filekey parameter: #Harmonizing missing data SRTR data often uses non-standard codes represent missingness — \"\",\"U\", \"ND\", \"C: Disclose\" — can vary variable. srtr_normalize_missing() function helps harmonize values converting NA user-specified label like \"Missing\". Internally, uses built-dictionary variable-specific missing codes drawn SRTR documentation known conventions. can also pass custom list codes using missing_vals argument.","code":"# Load data with matching name TX_KI <- read_sas(\"TX_KI.sas7bdat\")  # Apply labels without specifying filekey TX_KI <- TX_KI %>%   apply_srtr_factors() %>%   apply_srtr_varlabels() tx_li <- load_srtr_file(\"TX_LI\", var_labels = TRUE, factor_labels = TRUE)  # Replace common SRTR missing codes (e.g., \"U\", \"\", \"ND\") with NA tx_li <- srtr_normalize_missing(tx_li)  # Replace missing codes and NAs with an explicit label tx_li <- srtr_normalize_missing(tx_li, replacement = \"Missing\") # Load the data tx_li <- load_srtr_file(\"TX_LI\", var_labels = TRUE, factor_labels = TRUE)  # Define custom missing codes for specific variables custom_missing_vals <- list(   REC_HIV_STAT = c(\"U\", \"\"),              # \"Unknown\" or blank   REC_HCV_STAT = c(\"ND: Not Done\", \"U\"),  # Custom-labeled values   REC_CMVD = c(-1, 999),                  # Numeric codes   DON_RACE = c(\"99\", \"Unknown\")           # Other arbitrary codes )  # Apply normalization, replacing with NA tx_li_clean <- srtr_normalize_missing(tx_li, missing_vals = custom_missing_vals)  # Or, replace all with an explicit label tx_li_labeled <- srtr_normalize_missing(tx_li, missing_vals = custom_missing_vals, replacement = \"Missing\")"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"common-srtr-file-types","dir":"Articles","previous_headings":"","what":"Common SRTR File Types","title":"Getting Started with sRtr","text":"sRtr package supports standard SRTR file types. commonly used files:","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"transplant-files","dir":"Articles","previous_headings":"Common SRTR File Types","what":"Transplant Files","title":"Getting Started with sRtr","text":"TX_LI - Liver transplants TX_KI - Kidney transplants TX_HR - Heart transplants TX_LU - Lung transplants TX_IN - Intestine transplants TX_PA - Pancreas transplants","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"candidate-files","dir":"Articles","previous_headings":"Common SRTR File Types","what":"Candidate Files","title":"Getting Started with sRtr","text":"CAND_LIVA - Liver candidates CAND_KIDA - Kidney candidates CAND_THORA - Heart candidates CAND_LUNGA - Lung candidates","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"other-files","dir":"Articles","previous_headings":"Common SRTR File Types","what":"Other Files","title":"Getting Started with sRtr","text":"DONOR - Donor information DONOR_DECEASED - Deceased donor information DONOR_LIVING - Living donor information","code":"# Examples of loading different file types liver_tx <- load_srtr_file(\"TX_LI\", var_labels = TRUE, factor_labels = TRUE) kidney_cand <- load_srtr_file(\"CAND_KIDA\", var_labels = TRUE, factor_labels = TRUE) donors <- load_srtr_file(\"DONOR\", var_labels = TRUE, factor_labels = TRUE)"},{"path":[]},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"always-use-labels","dir":"Articles","previous_headings":"Best Practices","what":"1. Always Use Labels","title":"Getting Started with sRtr","text":"Always load data variable factor labels informative analysis source data set automatically load labels.","code":"# Recommended approach data <- load_srtr_file(\"TX_LI\", var_labels = TRUE, factor_labels = TRUE)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"check-your-data","dir":"Articles","previous_headings":"Best Practices","what":"2. Check Your Data","title":"Getting Started with sRtr","text":"Always examine data loading ensure loaded correctly:","code":"# Check dimensions dim(data)  # Check variable labels var_label(data[1:5])  # Check factor levels for key variables str(data$DON_RACE) str(data$GRAFT_STAT)"},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"document-your-file-sources","dir":"Articles","previous_headings":"Best Practices","what":"3. Document Your File Sources","title":"Getting Started with sRtr","text":"Keep track SRTR files ’re using versions:","code":"# Good practice: document your data sources # TX_LI file loaded from SRTR SAF 2024Q1 # Contains liver transplant data from 1987-2023 tx_li <- load_srtr_file(\"TX_LI\", var_labels = TRUE, factor_labels = TRUE)"},{"path":[]},{"path":[]},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"file-not-found","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"File Not Found","title":"Getting Started with sRtr","text":"get “file found” error, check: - working directory set correctly set_SRTR_wd()? - files specified directory? - using correct file name (without extension)?","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"labels-not-applied","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Labels Not Applied","title":"Getting Started with sRtr","text":"labels aren’t applied: - Ensure ’re using correct file key - Check file name matches expected SRTR convention - Verify ’re using var_labels = TRUE /factor_labels = TRUE","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"memory-issues","dir":"Articles","previous_headings":"Troubleshooting > Common Issues","what":"Memory Issues","title":"Getting Started with sRtr","text":"large files: - Consider loading variables need - Work data chunks necessary - Ensure sufficient RAM dataset","code":""},{"path":"https://vagishhemmige.github.io/sRtr/articles/getting-started.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"Next Steps","title":"Getting Started with sRtr","text":"Now ’ve learned basics loading labeling SRTR data, might want explore: STROBE Analysis Workflows: Learn create CONSORT/STROBE diagrams research advanced functionality, including STROBE diagram generation, see additional vignettes package.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vagish Hemmige. Author, maintainer. Jonathan Czeresnia. Author, contributor.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hemmige V, Czeresnia J (2025). sRtr: Tools Working UNOS SRTR Transplant Data R. R package version 0.0.0.9000, https://github.com/VagishHemmige/sRtr.","code":"@Manual{,   title = {sRtr: Tools for Working with UNOS SRTR Transplant Data in R},   author = {Vagish Hemmige and Jonathan Czeresnia},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/VagishHemmige/sRtr}, }"},{"path":"https://vagishhemmige.github.io/sRtr/index.html","id":"srtr","dir":"","previous_headings":"","what":"Tools for Working with UNOS SRTR Transplant Data in R","title":"Tools for Working with UNOS SRTR Transplant Data in R","text":"sRtr package provides tools load, label, work Scientific Registry Transplant Recipients (SRTR) Standard Analysis Files (SAFs) R. supports automatic variable labeling factor conversion using official SRTR data dictionary.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for Working with UNOS SRTR Transplant Data in R","text":"can install development version sRtr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"VagishHemmige/sRtr\")"},{"path":"https://vagishhemmige.github.io/sRtr/index.html","id":"setup","dir":"","previous_headings":"","what":"Setup","title":"Tools for Working with UNOS SRTR Transplant Data in R","text":"using load_srtr_file(), must initialize file registry using local file paths:","code":"library(sRtr)  # Example: point to a folder of .sas7bdat or .parquet files for the session only set_srtr_wd(\"path/to/srtr/files\")  # Or set permanently: set_srtr_wd(\"path/to/srtr/files\", permanent = TRUE)"},{"path":"https://vagishhemmige.github.io/sRtr/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tools for Working with UNOS SRTR Transplant Data in R","text":"primary function load_srtr_file(), loads (optionally) labels SRTR files: can also use labeling functions independently: name data frame corresponds name underlying file, filekey option can omitted: See Function Reference full documentation. Much , including help files, vignettes, etc. coming soon!","code":"# Load the TX_LI file with factor and variable labels tx_li <- load_srtr_file(\"TX_LI\", factor_labels = TRUE, var_labels = TRUE)  # View factor labels str(tx_li$DON_RACE)  # Example factor column  # View variable label labelled::var_label(tx_li$DON_RACE) df <- read_sas(\"TX_KI.sas7bdat\")  df <- apply_srtr_factors(df, filekey=\"TX_KI\") df <- apply_srtr_varlabels(df, filekey=\"TX_KI\") TX_KI <- read_sas(\"TX_KI.sas7bdat\")  TX_KI_labelled <-TX_KI%>%    apply_srtr_factors()"},{"path":"https://vagishhemmige.github.io/sRtr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Vagish Hemmige Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/add_pdri.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Pancreas Donor Risk Index (PDRI) — add_pdri","title":"Add Pancreas Donor Risk Index (PDRI) — add_pdri","text":"Computes PDRI appends df (default column name: \"PDRI\"). df grouped (dplyr), optional mean-imputation performed within groups. Original columns never modified.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/add_pdri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Pancreas Donor Risk Index (PDRI) — add_pdri","text":"","code":"add_pdri(   df,   variant = NULL,   mean_impute = FALSE,   pdri_col = \"PDRI\",   verbose = FALSE,   return_terms = FALSE )"},{"path":"https://vagishhemmige.github.io/sRtr/reference/add_pdri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Pancreas Donor Risk Index (PDRI) — add_pdri","text":"df data frame (may dplyr grouped data frame). variant NULL (default; auto-detect), \"PA\" (pancreas-alone), \"KP\" (kidney-pancreas). mean_impute Logical. TRUE, mean-impute missing numeric inputs within current group (overall ungrouped) calculation . indicator terms, NA treated 0 mean_impute = TRUE; otherwise NA propagates PDRI. pdri_col Name output column. Default \"PDRI\". verbose TRUE, print inference sanity messages. return_terms Logical. TRUE, also attaches list-column PDRI_terms per-row linear predictor contributions (QA/testing).","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/add_pdri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Pancreas Donor Risk Index (PDRI) — add_pdri","text":"df new pdri_col column; grouping preserved.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/add_pdri.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Pancreas Donor Risk Index (PDRI) — add_pdri","text":"Required base columns: DON_GENDER, DON_AGE_IN_MONTHS, DON_CREAT, DON_RACE, DON_HGT_CM, DON_COD_DON_STROKE, REC_PA_PRESERV_TM, DON_NON_HR_BEAT DON_BMI missing, computed DON_WGT_KG DON_HGT_CM. PA additionally uses REC_PREV_KI interaction term; absent, interaction skipped (equivalent KP behavior).","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/add_pdri.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Pancreas Donor Risk Index (PDRI) — add_pdri","text":"","code":"if (FALSE) { # Default: auto-detect PA vs KP kp |>   dplyr::group_by(REC_TX_YEAR) |>   add_pdri(mean_impute = TRUE)  # Force PA pa |> add_pdri(variant = \"PA\")  # Inspect term breakdown (QA) # tmp <- kp |> dplyr::slice(1:3) # res <- add_pdri(tmp, return_terms = TRUE) # res$PDRI_terms[[1]]  # additive components for the first row }"},{"path":"https://vagishhemmige.github.io/sRtr/reference/apply_srtr_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply SRTR factor labels to a data frame — apply_srtr_factors","title":"Apply SRTR factor labels to a data frame — apply_srtr_factors","text":"Converts coded variables SRTR dataset human-readable factors using SRTR data dictionary associated format tables.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/apply_srtr_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply SRTR factor labels to a data frame — apply_srtr_factors","text":"","code":"apply_srtr_factors(df, file_key = NULL, verbose = FALSE)"},{"path":"https://vagishhemmige.github.io/sRtr/reference/apply_srtr_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply SRTR factor labels to a data frame — apply_srtr_factors","text":"df data frame loaded SRTR SAF file. file_key Optional. dataset name (e.g., \"CAND_KIPA\", \"TX_KI\"). provided, function use file_key attribute object name. verbose Logical. TRUE, print variable labeled.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/apply_srtr_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply SRTR factor labels to a data frame — apply_srtr_factors","text":"data frame factor levels applied coded variables.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/apply_srtr_factors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply SRTR factor labels to a data frame — apply_srtr_factors","text":"file_key explicitly provided, function first check file_key attribute data frame (e.g., load_srtr_file()). found, attempt infer object name.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/apply_srtr_factors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply SRTR factor labels to a data frame — apply_srtr_factors","text":"","code":"if (FALSE) { # Explicit file_key df <- read_sas(\"TX_KI.sas7bdat\") df <- apply_srtr_factors(df, file_key = \"TX_KI\", verbose = TRUE)  # Implicit file_key from attribute (if loaded via load_srtr_file) df <- load_srtr_file(\"TX_KI\") df <- apply_srtr_factors(df)  # Fallback to object name inference TX_KI <- read_sas(\"TX_KI.sas7bdat\") TX_KI <- apply_srtr_factors(TX_KI) }"},{"path":"https://vagishhemmige.github.io/sRtr/reference/apply_srtr_varlabels.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply SRTR variable labels to a data frame — apply_srtr_varlabels","title":"Apply SRTR variable labels to a data frame — apply_srtr_varlabels","text":"Adds human-readable variable labels SRTR dataset using SRTR data dictionary.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/apply_srtr_varlabels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply SRTR variable labels to a data frame — apply_srtr_varlabels","text":"","code":"apply_srtr_varlabels(df, file_key = NULL, verbose = FALSE)"},{"path":"https://vagishhemmige.github.io/sRtr/reference/apply_srtr_varlabels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply SRTR variable labels to a data frame — apply_srtr_varlabels","text":"df data frame loaded SRTR SAF file. file_key Optional. dataset name (e.g., \"CAND_KIPA\", \"TX_KI\"). file loaded via load_srtr_file function, argument unnecessary. verbose Logical. TRUE, print variable labeled.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/apply_srtr_varlabels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply SRTR variable labels to a data frame — apply_srtr_varlabels","text":"data frame variable labels applied.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/apply_srtr_varlabels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply SRTR variable labels to a data frame — apply_srtr_varlabels","text":"file_key explicitly provided, function first check file_key attribute data frame. found, attempt infer object name.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/apply_srtr_varlabels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply SRTR variable labels to a data frame — apply_srtr_varlabels","text":"","code":"if (FALSE) { # Explicit file_key df <- read_sas(\"TX_KI.sas7bdat\") df <- apply_srtr_varlabels(df, file_key = \"TX_KI\", verbose = TRUE)  # Implicit file_key from attribute (if loaded via load_srtr_file) df <- load_srtr_file(\"TX_KI\") df <- apply_srtr_varlabels(df)  # Fallback to object name inference TX_KI <- read_sas(\"TX_KI.sas7bdat\") TX_KI <- apply_srtr_varlabels(TX_KI) }"},{"path":"https://vagishhemmige.github.io/sRtr/reference/dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"SRTR Variable Dictionary — dictionary","title":"SRTR Variable Dictionary — dictionary","text":"lookup table variable metadata extracted Scientific Registry Transplant Recipients (SRTR) data dictionary. dataset describes variable name, type, length, label, associated format variable dataset.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SRTR Variable Dictionary — dictionary","text":"","code":"dictionary"},{"path":"https://vagishhemmige.github.io/sRtr/reference/dictionary.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SRTR Variable Dictionary — dictionary","text":"data frame 6 columns: Dataset abbreviated SRTR dataset name (e.g., kp_diab, txfu) Variable name variable appears data Type storage type (e.g., character, numeric) Length declared length field width FormatID format group name (used match formats coded values) Label descriptive label variable","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/dictionary.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SRTR Variable Dictionary — dictionary","text":"Extracted SRTR data dictionary HTML snapshot (data-raw/dataDictionary.html).","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/dot-map_SRTR_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: Map SRTR data files in the working directory — .map_srtr_files","title":"Internal: Map SRTR data files in the working directory — .map_srtr_files","text":"Scans directory set SRTR_WD environment variable stores cleaned file list package's internal environment downstream use.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/dot-map_SRTR_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: Map SRTR data files in the working directory — .map_srtr_files","text":"","code":".map_srtr_files()"},{"path":"https://vagishhemmige.github.io/sRtr/reference/dot-map_SRTR_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Internal: Map SRTR data files in the working directory — .map_srtr_files","text":"function intended internal use automatically run package load SRTR_WD set.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/dot-srtr_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal environment for package-level state — .srtr_env","title":"Internal environment for package-level state — .srtr_env","text":"environment used store internal session-specific state, file list loaded .map_SRTR_files() STROBE derivation flow. exported accessed directly users.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/dot-srtr_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal environment for package-level state — .srtr_env","text":"","code":".srtr_env"},{"path":"https://vagishhemmige.github.io/sRtr/reference/dot-srtr_env.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Internal environment for package-level state — .srtr_env","text":"object class environment length 2.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/formats.html","id":null,"dir":"Reference","previous_headings":"","what":"SRTR Format Lookup Table — formats","title":"SRTR Format Lookup Table — formats","text":"Lookup table used convert coded values SRTR datasets human-readable factor labels.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SRTR Format Lookup Table — formats","text":"","code":"formats"},{"path":"https://vagishhemmige.github.io/sRtr/reference/formats.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"SRTR Format Lookup Table — formats","text":"data frame 3 columns: Format name format group (e.g., ABO, CMV) Code coded value (string numeric) Meaning human-readable label code","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/formats.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"SRTR Format Lookup Table — formats","text":"Derived official SRTR format tables","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/get_strobe_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the STROBE Derivation Log — get_strobe_log","title":"Retrieve the STROBE Derivation Log — get_strobe_log","text":"Returns current STROBE tracking data frame containing sequence filtering steps, labels, counts included excluded observations.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/get_strobe_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the STROBE Derivation Log — get_strobe_log","text":"","code":"get_strobe_log()"},{"path":"https://vagishhemmige.github.io/sRtr/reference/get_strobe_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the STROBE Derivation Log — get_strobe_log","text":"data frame columns: id, parent, label, filter, remaining, dropped.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/get_strobe_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the STROBE Derivation Log — get_strobe_log","text":"","code":"get_strobe_log() #> # A tibble: 0 × 7 #> # ℹ 7 variables: id <chr>, parent <chr>, inclusion_label <chr>, #> #   exclusion_reason <chr>, filter <chr>, remaining <int>, dropped <int>"},{"path":"https://vagishhemmige.github.io/sRtr/reference/load_srtr_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an SRTR file and optionally apply labels — load_srtr_file","title":"Load an SRTR file and optionally apply labels — load_srtr_file","text":"Loads file SRTR dataset registry optionally applies: Factor labels using formats dataset Variable labels using dictionary dataset","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/load_srtr_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an SRTR file and optionally apply labels — load_srtr_file","text":"","code":"load_srtr_file(   file_key,   factor_labels = TRUE,   var_labels = TRUE,   col_select = NULL,   ... )"},{"path":"https://vagishhemmige.github.io/sRtr/reference/load_srtr_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an SRTR file and optionally apply labels — load_srtr_file","text":"file_key Character. Canonical dataset key (e.g., \"TX_LI\", \"CAND_KIPA\"). factor_labels Logical. Whether apply factor labels. Default = TRUE. var_labels Logical. Whether apply variable labels. Default = FALSE. col_select Optional. Tidyselect expression character vector selecting columns. ... Additional arguments passed file reader (e.g., as_factor read_sas()).","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/load_srtr_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an SRTR file and optionally apply labels — load_srtr_file","text":"tibble loaded file contents, optionally labeled. tibble includes attributes source_path file_key.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/load_srtr_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load an SRTR file and optionally apply labels — load_srtr_file","text":"variable names standardized uppercase loading. returned tibble includes two attributes: source_path: full path file disk file_key: canonical dataset key used load ","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/load_srtr_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load an SRTR file and optionally apply labels — load_srtr_file","text":"","code":"if (FALSE) { df <- load_srtr_file(\"TX_LI\", factor_labels = TRUE, var_labels = TRUE) }"},{"path":"https://vagishhemmige.github.io/sRtr/reference/plot_strobe_diagram.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot STROBE Derivation Diagram — plot_strobe_diagram","title":"Plot STROBE Derivation Diagram — plot_strobe_diagram","text":"Creates STROBE flow diagram filtering log recorded via strobe_initialize() strobe_filter(). main inclusion path flows top--bottom, exclusions drawn horizontal arrows pointing dashed boxes right, originating connecting lines.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/plot_strobe_diagram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot STROBE Derivation Diagram — plot_strobe_diagram","text":"","code":"plot_strobe_diagram(   export_file = NULL,   incl_width_min = 3,   incl_height = NULL,   excl_width_min = 2.5,   excl_height = NULL,   incl_fontsize = 14,   excl_fontsize = 12,   lock_width_min = FALSE,   lock_height = FALSE )"},{"path":"https://vagishhemmige.github.io/sRtr/reference/plot_strobe_diagram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot STROBE Derivation Diagram — plot_strobe_diagram","text":"export_file Optional file path (e.g., \"diagram.png\" \"diagram.svg\") save diagram. incl_width_min Width inclusion boxes inches. NULL, auto-sizes content. incl_height Height inclusion boxes inches. NULL, auto-sizes content. excl_width_min Width exclusion boxes inches. NULL, auto-sizes content. excl_height Height exclusion boxes inches. NULL, auto-sizes content. incl_fontsize Font size inclusion box text (default = 14). excl_fontsize Font size exclusion box text (default = 12). lock_width_min Logical. TRUE, treats incl_width_min excl_width_min minimum widths. Due Graphviz limitations, widths lower bounds — content may still expand boxes beyond values. lock_height Logical. TRUE, enforces exact box heights nodes.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/plot_strobe_diagram.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot STROBE Derivation Diagram — plot_strobe_diagram","text":"DiagrammeR graph object representing STROBE diagram.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/set_SRTR_wd.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the SRTR working directory — set_srtr_wd","title":"Set the SRTR working directory — set_srtr_wd","text":"Sets SRTR working directory current session, optionally saves permanently user's .Renviron file environment variable SRTR_WD.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/set_SRTR_wd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the SRTR working directory — set_srtr_wd","text":"","code":"set_srtr_wd(path, permanent = FALSE)"},{"path":"https://vagishhemmige.github.io/sRtr/reference/set_SRTR_wd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the SRTR working directory — set_srtr_wd","text":"path Path SRTR data folder permanent Logical; TRUE, appends setting .Renviron persistence","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/set_SRTR_wd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the SRTR working directory — set_srtr_wd","text":"normalized path, invisibly","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/set_SRTR_wd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the SRTR working directory — set_srtr_wd","text":"","code":"if (FALSE) { set_srtr_wd(\"C:/Data/SRTR\")          # Session only set_srtr_wd(\"C:/Data/SRTR\", TRUE)    # Persistent across sessions }"},{"path":"https://vagishhemmige.github.io/sRtr/reference/set_USRDS_wd.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the USRDS working directory — set_USRDS_wd","title":"Set the USRDS working directory — set_USRDS_wd","text":"Sets USRDS working directory current session, optionally saves permanently user's .Renviron file environment variable USRDS_WD.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/set_USRDS_wd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the USRDS working directory — set_USRDS_wd","text":"","code":"set_USRDS_wd(path, permanent = FALSE)"},{"path":"https://vagishhemmige.github.io/sRtr/reference/set_USRDS_wd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the USRDS working directory — set_USRDS_wd","text":"path Path USRDS data folder permanent Logical; TRUE, appends setting .Renviron persistence","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/set_USRDS_wd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the USRDS working directory — set_USRDS_wd","text":"normalized path, invisibly","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/set_USRDS_wd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the USRDS working directory — set_USRDS_wd","text":"","code":"if (FALSE) { set_USRDS_wd(\"C:/Data/USRDS\")          # Session only set_USRDS_wd(\"C:/Data/USRDS\", TRUE)    # Persistent across sessions }"},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_composite_death.html","id":null,"dir":"Reference","previous_headings":"","what":"Composite death date (OPTN > SSA > TFL) — srtr_composite_death","title":"Composite death date (OPTN > SSA > TFL) — srtr_composite_death","text":"Builds composite death date column using precedence across typical SRTR sources: OPTN (PERS_OPTN_DEATH_DT), SSA (PERS_SSA_DEATH_DT), TFL (TFL_DEATH_DT). default respects precedence using dplyr::coalesce(). Optionally, set prefer_earliest = TRUE pick earliest non-missing date instead.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_composite_death.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Composite death date (OPTN > SSA > TFL) — srtr_composite_death","text":"","code":"srtr_composite_death(   df,   optn = \"PERS_OPTN_DEATH_DT\",   ssa = \"PERS_SSA_DEATH_DT\",   tfl = \"TFL_DEATH_DT\",   out = \"REC_DEATH_DT_COMPOSITE\",   parse = TRUE,   keep_source = TRUE,   add_conflict_flag = TRUE,   prefer_earliest = FALSE )"},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_composite_death.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Composite death date (OPTN > SSA > TFL) — srtr_composite_death","text":"df data frame. optn, ssa, tfl Character column names OPTN, SSA, TFL death dates. Name output composite column create. parse TRUE, parse three inputs .srtr_as_date(). keep_source TRUE, add {}_source chosen source label. add_conflict_flag TRUE, add {}_conflict sources disagree. prefer_earliest TRUE, ignore precedence choose earliest date.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_composite_death.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Composite death date (OPTN > SSA > TFL) — srtr_composite_death","text":"df added composite column (optional source/conflict columns).","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_composite_death.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Composite death date (OPTN > SSA > TFL) — srtr_composite_death","text":"Columns parsed .srtr_as_date() accept YYYYMMDD integers/strings. can also keep \"source won\" indicator conflict flag multiple sources disagree.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_composite_death.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Composite death date (OPTN > SSA > TFL) — srtr_composite_death","text":"","code":"if (FALSE) { df <- srtr_composite_death(df) }"},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_normalize_missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Missing Value Representations in SRTR Data — srtr_normalize_missing","title":"Normalize Missing Value Representations in SRTR Data — srtr_normalize_missing","text":"Replaces common non-standard representations missing values (e.g., -1, 999, \"Unknown\") either NA user-specified string (e.g., \"Missing\"). includes explicit missing codes (provided via missing_vals) , replacement NA, existing NA values specified columns.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_normalize_missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Missing Value Representations in SRTR Data — srtr_normalize_missing","text":"","code":"srtr_normalize_missing(   df,   missing_vals = NULL,   replacement = NA,   verbose = FALSE )"},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_normalize_missing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Missing Value Representations in SRTR Data — srtr_normalize_missing","text":"df data frame SRTR SAF file. missing_vals optional named list. srtr_normalize_missing() function defaults internal list variables normalize values convert specified replacement value. name corresponds column df, element vector values treat missing column. values matched replaced replacement. Columns present df silently skipped. replacement value use place missing representations. Defaults NA. string provided (e.g., \"Missing\"), missing codes NA values replaced. column factor replacement NA, replacement added new factor level. verbose Logical. TRUE, function prints message column modifies, including skipped columns found df.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_normalize_missing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Missing Value Representations in SRTR Data — srtr_normalize_missing","text":"modified version df, specified missing values (possibly NAs) replaced replacement.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_normalize_missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalize Missing Value Representations in SRTR Data — srtr_normalize_missing","text":"function helpful harmonizing SRTR datasets, may use multiple codes represent missingness (e.g., -1 numeric fields, \"U\" \"Unknown\" character factor fields).","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_normalize_missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize Missing Value Representations in SRTR Data — srtr_normalize_missing","text":"","code":"if (FALSE) { df <- load_srtr_file(\"TX_LI\")  # Use default SRTR-wide missing definitions srtr_normalize_missing(df)  # Explicitly define missing values and convert all missing to \"Missing\" missing_vals <- list(   REC_HIV_STAT = c(\"U\", \"\"),   REC_HCV_STAT = c(\"U\", \"\"), ) srtr_normalize_missing(df, missing_vals, replacement = \"Missing\") }"},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_time_to_event.html","id":null,"dir":"Reference","previous_headings":"","what":"Build time-to-event variables for SRTR-style data — srtr_time_to_event","title":"Build time-to-event variables for SRTR-style data — srtr_time_to_event","text":"Creates three columns outcome defined event date censor date: prefix_CENSOR: event date present, otherwise censor date prefix_BINARY: 1 event date present, else 0 prefix_unit: numeric time start_date prefix_CENSOR chosen units","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_time_to_event.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build time-to-event variables for SRTR-style data — srtr_time_to_event","text":"","code":"srtr_time_to_event(   df,   event_date,   start_date,   censor_date,   prefix,   units = c(\"years\", \"months\", \"days\"),   add_epsilon = 1,   warn_negative = TRUE )"},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_time_to_event.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build time-to-event variables for SRTR-style data — srtr_time_to_event","text":"df data frame. event_date Event date column (unquoted). start_date Start date column (unquoted), e.g., REC_TX_DT. censor_date Censor/last-follow-date column (unquoted), e.g., TFL_LAFUDATEPA. prefix String used new columns (e.g., \"REC_DEATH\"). units One \"years\", \"months\", \"days\". Default \"years\". add_epsilon Numeric days add time (avoid zero-time issues). Default 1. Set 0 disable. Logical TRUE/FALSE also accepted (treated 1/0) backward compatibility. warn_negative Warn set NA computed time negative. Default TRUE.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_time_to_event.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build time-to-event variables for SRTR-style data — srtr_time_to_event","text":"df added columns: {prefix}_CENSOR, {prefix}_BINARY, {prefix}_{units-suffix}, {prefix}_NEGATIVE_TIME.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/srtr_time_to_event.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build time-to-event variables for SRTR-style data — srtr_time_to_event","text":"Units suffix mapping: years -> \"_yrs\", months -> \"_months\", days -> \"_days\". Negative times (e.g., start_date > censor/event) flagged {prefix}_NEGATIVE_TIME, numeric time set NA.#'","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/strobe_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a Sequential Filtering Step for STROBE Tracking — strobe_filter","title":"Apply a Sequential Filtering Step for STROBE Tracking — strobe_filter","text":"Filters data frame based condition records effect filter (number retained excluded) STROBE tracking table. Steps automatically numbered linked sequence.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/strobe_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a Sequential Filtering Step for STROBE Tracking — strobe_filter","text":"","code":"strobe_filter(data, condition, inclusion_label, exclusion_reason = NULL)"},{"path":"https://vagishhemmige.github.io/sRtr/reference/strobe_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a Sequential Filtering Step for STROBE Tracking — strobe_filter","text":"data data frame filtered. condition filtering condition character string (e.g., \"age >= 18\"). inclusion_label human-readable description remaining cohort filtering. exclusion_reason Optional. label describing exclusion criterion, shown side box STROBE diagram. NULL, exclusion box added.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/strobe_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a Sequential Filtering Step for STROBE Tracking — strobe_filter","text":"filtered data frame applying condition.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/strobe_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a Sequential Filtering Step for STROBE Tracking — strobe_filter","text":"","code":"if (FALSE) { df <- strobe_initialize(my_data) df <- strobe_filter(df,   condition = \"age >= 18\",   inclusion_label = \"Age ≥ 18\",   exclusion_reason = \"Excluded: Age < 18\" ) }"},{"path":"https://vagishhemmige.github.io/sRtr/reference/strobe_initialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize STROBE Tracking — strobe_initialize","title":"Initialize STROBE Tracking — strobe_initialize","text":"Starts new STROBE derivation log cohort recording initial data frame's size. function must called , filtering steps. Internally, creates first row strobe_df resets tracking counter.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/strobe_initialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize STROBE Tracking — strobe_initialize","text":"","code":"strobe_initialize(data, inclusion_label = \"Initial eligible cohort\")"},{"path":"https://vagishhemmige.github.io/sRtr/reference/strobe_initialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize STROBE Tracking — strobe_initialize","text":"data data frame representing initial eligible cohort. inclusion_label human-readable label describing initial cohort. appear main path STROBE diagram. Default \"Initial eligible cohort\".","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/strobe_initialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize STROBE Tracking — strobe_initialize","text":"data frame, unchanged.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/strobe_initialize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize STROBE Tracking — strobe_initialize","text":"","code":"if (FALSE) { df <- strobe_initialize(my_data, inclusion_label = \"Adults age 18+ in registry\") }"},{"path":"https://vagishhemmige.github.io/sRtr/reference/transplant_centers_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"U.S. Transplant Centers (sf), EPSG:5070 — transplant_centers_sf","title":"U.S. Transplant Centers (sf), EPSG:5070 — transplant_centers_sf","text":"Point locations U.S. transplant centers derived CSV center names, codes, WGS84 coordinates, converted sf object projected NAD83 / Conus Albers (EPSG:5070).","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/transplant_centers_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"U.S. Transplant Centers (sf), EPSG:5070 — transplant_centers_sf","text":"","code":"transplant_centers_sf"},{"path":"https://vagishhemmige.github.io/sRtr/reference/transplant_centers_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"U.S. Transplant Centers (sf), EPSG:5070 — transplant_centers_sf","text":"sf object following columns: OTCName Transplant center name (character) OTCCode Transplant center code (character) geometry sfc_POINT EPSG:5070","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/transplant_centers_sf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"U.S. Transplant Centers (sf), EPSG:5070 — transplant_centers_sf","text":"data-raw/Transplant centers.csv. Verify licensing/redistribution terms source list centers prior public release.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/transplant_centers_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"U.S. Transplant Centers (sf), EPSG:5070 — transplant_centers_sf","text":"Coordinates consumed sf::st_as_sf(coords = c(\"Longitude\",\"Latitude\"), crs = 4326) stored geometry column; original numeric longitude/latitude columns retained.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/transplant_centers_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"U.S. Transplant Centers (sf), EPSG:5070 — transplant_centers_sf","text":"","code":"if (FALSE) { if (requireNamespace(\"sf\", quietly = TRUE)) {   plot(sf::st_geometry(transplant_centers_sf))    # Tag each center with a UNOS region using a spatial join   if (exists(\"UNOS_regions_sf\")) {     centers_with_region <- sf::st_join(       transplant_centers_sf,       UNOS_regions_sf %>% dplyr::group_by(Region) %>%         dplyr::summarise(geometry = sf::st_union(geometry), .groups = \"drop\"),       join = sf::st_within, left = TRUE     )     head(centers_with_region)   } } }"},{"path":"https://vagishhemmige.github.io/sRtr/reference/UNOS_regions_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"UNOS Regions by State (sf), EPSG:5070 — UNOS_regions_sf","title":"UNOS Regions by State (sf), EPSG:5070 — UNOS_regions_sf","text":"row represents one U.S. state (contiguous U.S. plus District Columbia) annotated UNOS region. Geometries state polygons projected NAD83 / Conus Albers (EPSG:5070).","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/UNOS_regions_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UNOS Regions by State (sf), EPSG:5070 — UNOS_regions_sf","text":"","code":"UNOS_regions_sf"},{"path":"https://vagishhemmige.github.io/sRtr/reference/UNOS_regions_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UNOS Regions by State (sf), EPSG:5070 — UNOS_regions_sf","text":"sf object one row per state following columns: Region UNOS region label (character) State State name Census shapefile (character) geometry sfc_MULTIPOLYGON EPSG:5070","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/UNOS_regions_sf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UNOS Regions by State (sf), EPSG:5070 — UNOS_regions_sf","text":"U.S. Census Bureau Cartographic Boundary Files (2018), states (20m). UNOS region membership table data-raw/UNOS regions.xlsx.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/UNOS_regions_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"UNOS Regions by State (sf), EPSG:5070 — UNOS_regions_sf","text":"object generated data-raw/ joining table UNOS region membership (state → region) Census state boundaries projecting CONUS-appropriate projected CRS. Note state-level geometry; obtain region polygons, dissolve Region (see Examples). Alaska, Hawaii, Puerto Rico excluded focus CONUS + DC, matching typical analytic maps chosen CRS. original lat/long CRS shapefile transformed EPSG:5070 consistent area/length behavior.","code":""},{"path":"https://vagishhemmige.github.io/sRtr/reference/UNOS_regions_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UNOS Regions by State (sf), EPSG:5070 — UNOS_regions_sf","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   # quick look   plot(sf::st_geometry(UNOS_regions_sf))    # build dissolved region polygons if needed   library(dplyr)   unos_regions_poly <- UNOS_regions_sf %>%     group_by(Region) %>%     summarise(geometry = sf::st_union(geometry), .groups = \"drop\") %>%     sf::st_make_valid()   plot(sf::st_geometry(unos_regions_poly)) }  #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union"}]
